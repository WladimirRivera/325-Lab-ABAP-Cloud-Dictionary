CLASS zcl_lock_obj_univ_437 DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES if_oo_adt_classrun .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.

CLASS zcl_lock_obj_univ_437 IMPLEMENTATION.
  METHOD if_oo_adt_classrun~main.
    out->write( |Trying to update Student| ).

*   Get Instance of Lock Object
    TRY.
        DATA(lo_lock_object) = cl_abap_lock_object_factory=>get_instance(
        iv_name =  'EZ_UNIV_LOCK_437' ).
      CATCH cx_abap_lock_failure.
        out->write( |Lock Object Instance Not Created| ).
    ENDTRY.

*   Get the write lock object for component SOC
    DATA lt_parametr TYPE if_abap_lock_object=>tt_parameter.

    lt_parametr = VALUE #( (  name = 'SOC'
                              value = REF #( 'LOG1' ) ) ).

*   Request Lock Object
    TRY.
        lo_lock_object->enqueue( it_parameter  = lt_parametr  ).
      CATCH cx_abap_foreign_lock cx_abap_lock_failure.
        out->write( |Not possible to write on the database. Object is Locked| ).
        RETURN.
    ENDTRY.
*   Adding records to the table using Modify
    MODIFY zuniversity_437 FROM TABLE @( VALUE #( ( soc = 'LOG1'
                                                    exercise = '2024'
                                                    student_id = 't100437'
                                                    first_name = 'Student'
                                                    last_name = '1'
                                                    course_code = '02'
                                                    course_price = '300.55'
                                                    currency = 'USD'
                                                    courses = '5'
                                                    unit = 'COU' ) ) ).
    IF sy-subrc EQ 0.
        out->write( |Rows Affected: { sy-dbcnt }| ).
    ENDIF.
    TRY.
      
*   Release Lock Object
    lo_lock_object->dequeue( it_parameter  = lt_parametr  ).
    CATCH cx_abap_lock_failure.
      out->write( |Locked Object was released| ).
      RETURN.
  ENDTRY.
  ENDMETHOD.
ENDCLASS.